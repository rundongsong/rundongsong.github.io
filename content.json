{"pages":[],"posts":[{"title":"JAVA基础知识","text":"JAVA中的名称命名规范：包名:多单词组成时所有字母都小写:xxxyyyzzz类名、接口名:多单词组成时,所有单词的首字母大写:XxxYyyZzz变量名、方法名:多单词组成时,第一个单词首字母小写,第二个单词开始每个单词首字母大写:xxxYyyZzz常量名:所有字母都大写。多单词时每个单词用下划线连接:XXX_YYY_ZZZ JAVA 中变量的分类-按数据的类型基本数据类型：数值型：1.整数类型：int long short byte 2.浮点类型 ：float double 字符型： char 布尔型：boolean 引用数据类型：类 接口 数组 按声明位置不同：成员变量：实例变量和类变量（用static修饰） 局部变量：形参 方法局部变量 代码快局部变量 整数类型变量：​ Java各整数类型有固定的表数范围和字段长度,不受具体OS的影响,以保证java程序的可移植性。​ java的整型常量默认为 int 型,声明long型常量须后加‘l’或‘L’​ java程序中变量通常声明为int型,除非不足以表示较大的数,才使用long 类型 占用存储空间 表数范围 byte 1 byte -128-127 short 2 byte -2^15 - 2^15 -1 int 4 byte -2^31 - 2^31 -1 long 8 byte -2^63 - 2^63 -1 浮点类型变量：与整数类型类似,Java 浮点类型也有固定的表数范围和字段长度,不受具体操作系统的影响。浮点型常量有两种表示形式:十进制数形式:如:5.12 512.0f .512 (必须有小数点)科学计数法形式:如:5.12e2 512E2 100E-2float:单精度,尾数可以精确到7位有效数字。很多情况下,精度很难满足需求。double:双精度,精度是float的两倍。通常采用此类型。Java 的浮点型常量默认为double型,声明float型常量,须后加‘f’或‘F’。 浮点数的表数范围比整数型的要打，但是同等占用空间的精度下降，故浮点数的存储方式应该是小数部分和指数部分分开存储 布尔类型：只有 true 和 false 没有null 也不能用数字代替 编译后在java 虚拟机中都使用虚拟机中的int数据类型代替 基础数据类型转换：自动类型转换:容量小的类型自动转换为容量大的数据类型。数据类型按容量大小排序为: char byte —–&gt; int ——–&gt; long —–&gt; float ——-&gt;float ——–&gt; double short 有多种类型的数据混合运算时,系统首先自动将所有数据转换成容量最大的那种数据类型,然后再进行计算。byte,short,char之间不会相互转换,他们三者在计算时首先转换为int类型。boolean类型不能与其它数据类型运算。当把任何基本数据类型的值和字符串(String)进行连接运算时(+),基本数据类型的值将自动转化为字符串(String)类型。 String 类型测试：（稍后进行）基本原则是从左向右，有String 转成String 强制类型转换：自动类型转换的逆过程,将容量大的数据类型转换为容量小的数据类型。使用时要加上强制转换符:(),但可能造成精度降低或溢出,格外要注意。 字符串不能直接转换，但是可以通过基本类型的包装类完成： 123String a=&quot;43&quot;int i = Integer.parseInt(a) 如果赋值的类型不同是否可以实现？如将short赋值给int 或者是反向操作，稍后尝试一下。","link":"/2020/11/18/JAVA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B9%8B%E5%8F%98%E9%87%8F%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/11/09/hello-world/"},{"title":"my first blog","text":"ITTTTTTTTTTT","link":"/2020/11/09/my-first-blog/"}],"tags":[],"categories":[]}